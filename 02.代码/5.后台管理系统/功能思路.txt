后台管理系统中,权限分级
    1.管理员
        可以使用当前项目中所有的模块和所有的功能

    2.访客
        只能使用当前项目中部分的模块和功能

需求:根据当前账号权限信息,控制用户可以访问的路由
拆解:
    1.根据当前账号权限信息
        通过login接口,可以将用户的帐号密码兑换成用户的唯一标识token字符串
        通过info接口,可以将用户的token字符串兑换成用户的帐号信息
            账号信息中的重要数据
                buttons->数据类型:String[],内部存储这当前账号的按钮级别的权限信息
                routes->数据类型:String[],内部存储这当前账号的路由级别的权限信息
                            其实就是当前账号能够访问的路由别名组成的数组

    2.控制用户可以访问的路由
        问题:如何控制用户是否能够进入一个路由?
            1.可以在导航守卫中进行判断,使用next决定是否放行
                next()->放行  next(false)->拒绝访问

            2.可以不注入部分路由,没有注入的路由,用户无法访问
                也就是故意在创建router的时候,不写入对应的路由对象

                问题:如何在项目启动之后,后续注入路由对象,实现动态路由功能
                    API: router.addRoute() router.addRoutes()
                    通过以上两个API,分别传入路由对象和路由对象组成的数组即可


流程:
    1.先将当前的所有路由对象,进行切割分组
        分为三类路由->常量路由,异步路由,任意路由
    2.找到info接口的action函数,将请求的到的用户相关信息传给指定的mutation方法
    3.在mutation中,我们会根据当前账号的权限信息routeNames数组,
        以及当前项目所有的异步路由对象组成的数组asyncRoutes,
        使用以上两个数组,过滤得到了一个当前账号能够访问的异步路由组成的数组
    4.使用router.addRoutes语法,将流程3中得到的数组进行动态注册
        经过这步操作之后,用户就能够访问异步路由了

问题:
    1.左侧菜单显示问题
        其实是因为左侧的菜单原本是使用了创建路由器那时传入的routes数组
            但是由于我们已经对routes数组进行了切割操作,所以当时只传入了常量路由,所以才会显示错误
        解决方法:在Vuex中,创建menus数组,在内部存储当前项目能够访问的所有路由对象,并用于左侧列表遍历显示

    2.由于过滤的时候,使用的一直都是同一个asyncRoutes数组作为模版,所以上一个用户过滤的结果很可能影响到下一个用户的显示
        解决方法:在每次使用asyncRoutes的时候,都对其进行深拷贝操作,防止过滤效果遗留问题

    3.虽然请求得到当前账号的权限,并实现了异步路由的注册功能,但是这个注册功能是异步的,你如果立即跳转,是无法成功
        解决方法:next()代表立即跳转,next({...to})或者next(to.path)实际效果是会强制跳转第二次
            而next()只会跳转一次