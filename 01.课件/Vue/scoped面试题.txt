问题一:Vuecli脚手架,是如何解析.vue中的style样式的,请说明过程
回答:
	1.webpack遇到.vue文件,会借助vue-loader包的能力解析该文件
	2.由于浏览器不认识sass代码,所以webpack需要借助sass-loader,将sass代码编译成css代码
	3.由于webpack不认识css代码,所以webpack需要借助css-loader,将css代码编译成js代码
	4.最终为了让浏览器能够识别js版本的css代码,需要使用style-loader,将这个字符串放入一个style标签中,再插入到页面上

问题二:那么,如何让每个组件的样式,不影响到其他组件?
回答:可以给style标签,添加一个scoped标签属性,用于限制这些样式的作用范围

问题三:scoped的作用范围
回答:作用于当前组件内部和子组件的根标签上

问题四:scoped是如何做到样式具有作用域效果的
回答
	1.Vue会给当前组件内部所有的节点以及子组件的根节点,添加特殊的标签属性
		标签属性的名称其实是一个hash值,该hash值永远唯一不重复

	2.Vue还会给style中的样式,全部添加上属性选择器,必须具有对应的标签属性,才能使用该样式

	由于其他组件内部没有这个hash值标签属性,所以他们不会匹配这些样式,所以实现了样式作用域效果

问题五:那么,既然scoped会生成css作用域,如何穿透该作用域
回答:可以使用深度选择器,来实现对与子组件样式的修改和控制
	语法:
		Vue2->	::v-deep h2{...}
		Vue3->	::deep(h2){...}
	

问题六:深度选择器是如何实现该效果的?
回答:
	其实就是没有书写深度选择器之间,Vue会将属性选择器写在最终的类名身上
		例如:#sku h2[hash值]

	加了深度选择器之后,Vue会将属性选择器添加在父类名身上
		例如:#sku[hash值] h2